{"version":3,"file":"static/js/947.8a62e52f.chunk.js","mappings":"qPAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,EAASI,OAErB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYb,GAASc,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAAb,GACnC,GAAE,CAACf,KAGF,iBAAKgB,UAAWC,EAAAA,EAAAA,sBAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,0BAAhB,WACA,mBAAQC,QAVG,kBAAMR,EAASR,EAASI,MAAMa,KAA9B,EAUcH,UAAWC,EAAAA,EAAAA,sBAApC,sBAGE,eAAID,UAAWC,EAAAA,EAAAA,sBAAf,SAA8CT,EAAMY,kBACpD,eAAGJ,UAAWC,EAAAA,EAAAA,kBAAd,yBACeT,EAAMa,iBAErB,sCACA,uBAAIb,EAAMc,YACV,oCAEA,eAAIN,UAAWC,EAAAA,EAAAA,uBAAf,SACGT,EAAMe,QACLf,EAAMe,OAAOC,KAAI,SAAAC,GAAO,OACtB,eAAIT,UAAWC,EAAAA,EAAAA,iBAAf,UACE,cAAGD,UAAWC,EAAAA,EAAAA,2BAAd,SACGQ,EAAQC,QAHS,OAQ5B,gBAAIV,UAAWC,EAAAA,EAAAA,0BAAf,WACE,eAAID,UAAWC,EAAAA,EAAAA,8BAAf,UACE,SAAC,KAAD,CAAMX,MAAOJ,EAASI,MAAOU,UAAWC,EAAAA,EAAAA,iBAAyBU,GAAG,OAApE,qBAIF,eAAIX,UAAWC,EAAAA,EAAAA,8BAAf,UACE,SAAC,KAAD,CAAMX,MAAOJ,EAASI,MAAOU,UAAWC,EAAAA,EAAAA,iBAAyBU,GAAG,UAApE,2BAKJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAGJ,gBAAKb,UAAWC,EAAAA,EAAAA,yBAAhB,UACE,gBACED,UAAWC,EAAAA,EAAAA,mBACXa,IAAG,0CAAqCtB,EAAMuB,aAC9CC,IAAG,+CAAYxB,EAAMY,sBAK9B,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import {useNavigate , useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchIdData } from '../../Api';\nimport { Link } from 'react-router-dom';\nimport styles from './MovieDetails.module.css';\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location.state);\n  // const backLinkHref = location.state?.from ?? '/';\n  const [value, setValue] = useState({});\n  const navigate = useNavigate();\n  const goBack = () => navigate(location.state.from);\n  \n\n  useEffect(() => {\n    fetchIdData(movieId).then(response => setValue(response));\n  }, [movieId]);\n\n  return (\n    <div className={styles.MovieDetailsContainer}>\n      <div className={styles.MovieDetailsTextContainer}>\n      <button onClick={goBack} className={styles.MovieDetailsGoBackBtn}>\n          Go back\n        </button>\n        <h2 className={styles.MovieDetailsFilmTitle}>{value.original_title}</h2>\n        <p className={styles.MovieDetailsGrade}>\n          User Score: {value.vote_average}\n        </p>\n        <h3>Overwiew</h3>\n        <p>{value.overview}</p>\n        <h3>Genres</h3>\n\n        <ul className={styles.MovieDetailsGenresList}>\n          {value.genres &&\n            value.genres.map(element => (\n              <li className={styles.MovieDetailsItem}>\n                <p className={styles.MovieDetailsGenresListText}>\n                  {element.name}\n                </p>\n              </li>\n            ))}\n        </ul>\n        <ul className={styles.MovieDetailsAditionalList}>\n          <li className={styles.MovieDetailsAditionalListItem}>\n            <Link state={location.state} className={styles.MovieDetailsCast} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li className={styles.MovieDetailsAditionalListItem}>\n            <Link state={location.state} className={styles.MovieDetailsCast} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n      <div className={styles.MovieDetailsImgContainer}>\n        <img\n          className={styles.MovieDetailsPoster}\n          src={`https://image.tmdb.org/t/p/w200/${value.poster_path}`}\n          alt={`Постер ${value.original_title}`}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["MovieDetails","movieId","useParams","location","useLocation","console","log","state","useState","value","setValue","navigate","useNavigate","useEffect","fetchIdData","then","response","className","styles","onClick","from","original_title","vote_average","overview","genres","map","element","name","to","Suspense","fallback","src","poster_path","alt"],"sourceRoot":""}